static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                route:
                  cluster: service1
              - match:
                  prefix: "/service/2"
                route:
                  cluster: service2
          http_filters:
          - name: envoy.router
            config: {}
  # clusters: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cds.proto
  clusters:
  - name: service1
    connect_timeout: 0.25s
    # outlier_detection: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster/outlier_detection.proto#envoy-api-field-cluster-outlierdetection-max-ejection-percent
# TODO: DEMO UNCOMMENT ðŸ‘‡
    outlier_detection: # Passive health checks
      consecutive_5xx: "3"
      base_ejection_time: "10s"

#    circuit_breakers:
#      thresholds:
#        max_connections: 1
#        max_pending_requests: 1
#        max_retries: 3

#    health_checks:
#      http_health_check: # TODO: http health endpoint similar to kubernetes readiness/liveness?
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: service1
        port_value: 80
  - name: service2
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: service2
        port_value: 80
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
